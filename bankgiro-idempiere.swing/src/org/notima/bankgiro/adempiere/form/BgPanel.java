/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LbBgPanel.java
 *
 * Created on 2009-jun-16, 16:10:16
 */

package org.notima.bankgiro.adempiere.form;

import org.notima.bankgiro.adempiere.model.MLBSettings;

import java.util.*;

/**
 *
 * @author Daniel Tamm
 */
public class BgPanel extends javax.swing.JPanel implements I_LBSettingsPanel {

    private SortedMap<String, MLBSettings>      m_settings;
    private XX_LBSettingsDialog                 m_parentDialog;

    /** Creates new form LbBgPanel */
    public BgPanel() {
        initComponents();
    }

    public void initPanel(XX_LBSettingsDialog parent, SortedMap<String, MLBSettings> settings) {
    	m_parentDialog = parent;
    	m_settings = settings;
    }
    
    @Override
    public void getForm() {
        MLBSettings.setSetting(MLBSettings.BG_RECEIVABLES_DIR, incomingArText.getText());
        MLBSettings.setSetting(MLBSettings.BG_RECEIVABLES_MOVETO_DIR, arArchiveDirText.getText());
        MLBSettings.setSetting(MLBSettings.BG_PAYMENT_REPORT, paymentReportText.getText());
    }

    @Override
    public void setForm() {

        MLBSettings incomingDir = m_settings.get(MLBSettings.BG_RECEIVABLES_DIR);
        incomingArText.setText(incomingDir!=null ? incomingDir.getName() : "");
        MLBSettings arArchiveDir = m_settings.get(MLBSettings.BG_RECEIVABLES_MOVETO_DIR);
        arArchiveDirText.setText(arArchiveDir!=null ? arArchiveDir.getName() : "");
        MLBSettings reportFile = m_settings.get(MLBSettings.BG_PAYMENT_REPORT);
        paymentReportText.setText(reportFile!=null ? reportFile.getName() : "");

    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        readARfiles = new javax.swing.JPanel();
        incomingArDirLabel = new javax.swing.JLabel();
        incomingArText = new javax.swing.JTextField();
        browseIncomingArDirButton = new javax.swing.JButton();
        arArchiveDirLabel = new javax.swing.JLabel();
        arArchiveDirText = new javax.swing.JTextField();
        browseArArchiveDirButton = new javax.swing.JButton();
        paymentReportLabel = new javax.swing.JLabel();
        paymentReportText = new javax.swing.JTextField();
        browsePaymentReportButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(500, 320));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        readARfiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Incoming payments - Accounts Receivables"));
        readARfiles.setMinimumSize(new java.awt.Dimension(292, 50));
        readARfiles.setPreferredSize(new java.awt.Dimension(292, 100));
        readARfiles.setLayout(new java.awt.GridBagLayout());

        incomingArDirLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        incomingArDirLabel.setText("Incoming directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
        readARfiles.add(incomingArDirLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        readARfiles.add(incomingArText, gridBagConstraints);

        browseIncomingArDirButton.setText("Browse");
        browseIncomingArDirButton.setMargin(new java.awt.Insets(2, 6, 2, 6));
        browseIncomingArDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseIncomingArDirButtonActionPerformed(evt);
            }
        });
        readARfiles.add(browseIncomingArDirButton, new java.awt.GridBagConstraints());

        arArchiveDirLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        arArchiveDirLabel.setText("Archive directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
        readARfiles.add(arArchiveDirLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        readARfiles.add(arArchiveDirText, gridBagConstraints);

        browseArArchiveDirButton.setText("Browse");
        browseArArchiveDirButton.setMargin(new java.awt.Insets(2, 6, 2, 6));
        browseArArchiveDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseArArchiveDirButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        readARfiles.add(browseArArchiveDirButton, gridBagConstraints);

        paymentReportLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        paymentReportLabel.setText("Payment report");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
        readARfiles.add(paymentReportLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        readARfiles.add(paymentReportText, gridBagConstraints);

        browsePaymentReportButton.setText("Browse");
        browsePaymentReportButton.setMargin(new java.awt.Insets(2, 6, 2, 6));
        browsePaymentReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsePaymentReportButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        readARfiles.add(browsePaymentReportButton, gridBagConstraints);

        add(readARfiles);
    }// </editor-fold>//GEN-END:initComponents

    private void browseIncomingArDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseIncomingArDirButtonActionPerformed

        MLBSettings outputDir = m_settings.get(MLBSettings.BG_RECEIVABLES_DIR);
        String startDir = outputDir != null ? outputDir.getName() : null;
        String newDir = m_parentDialog.browseForDirectory(startDir);
        if (newDir!=null) {
            incomingArText.setText(newDir);
            getForm();
        }
    }//GEN-LAST:event_browseIncomingArDirButtonActionPerformed

    private void browseArArchiveDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseArArchiveDirButtonActionPerformed

        MLBSettings outputDir = m_settings.get(MLBSettings.BG_RECEIVABLES_MOVETO_DIR);
        String startDir = outputDir != null ? outputDir.getName() : null;
        String newDir = m_parentDialog.browseForDirectory(startDir);
        if (newDir!=null) {
            arArchiveDirText.setText(newDir);
            getForm();
        }
    }//GEN-LAST:event_browseArArchiveDirButtonActionPerformed

    private void browsePaymentReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsePaymentReportButtonActionPerformed

        MLBSettings reportFile = m_settings.get(MLBSettings.BG_PAYMENT_REPORT);
        String startFile = reportFile!=null ? reportFile.getName() : null;
        String newFile = m_parentDialog.browseForFile(startFile);
        if (newFile!=null) {
            paymentReportText.setText(newFile);
            getForm();
        }
    }//GEN-LAST:event_browsePaymentReportButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arArchiveDirLabel;
    private javax.swing.JTextField arArchiveDirText;
    private javax.swing.JButton browseArArchiveDirButton;
    private javax.swing.JButton browseIncomingArDirButton;
    private javax.swing.JButton browsePaymentReportButton;
    private javax.swing.JLabel incomingArDirLabel;
    private javax.swing.JTextField incomingArText;
    private javax.swing.JLabel paymentReportLabel;
    private javax.swing.JTextField paymentReportText;
    private javax.swing.JPanel readARfiles;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return("BG settings");
    }

    @Override
    public String getTip() {
        return("BG settings");
    }


}
